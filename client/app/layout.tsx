'use client'
import type { Metadata } from "next";
import "./globals.css";
import { Poppins } from "next/font/google";
import { Josefin_Sans } from "next/font/google";
import { Toaster } from "react-hot-toast";
import { ThemeProvider } from "./utils/Theme-Provider";
import { Providers } from "./Provider";
import { SessionProvider } from "next-auth/react";
import { useLoadUserQuery } from "@/redux/features/api/apiSlice";
import Loader from './components/Loader/Loader'
const poppins = Poppins({
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"],
  variable: "--font-Poppins",
});

const josefin = Josefin_Sans({
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"],
  variable: "--font-Josefin",
});

const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${poppins.variable} ${josefin.variable}  dark:bg-slate-800 bg-white`}>
        <Providers>
          <SessionProvider>
          <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
          <Custom>
            {children}
          </Custom>
          <Toaster position="top-center" reverseOrder={false} />
        </ThemeProvider>
        </SessionProvider>
        </Providers>
          
      </body>
    </html>
  );
}

const Custom:React.FC<{children:React.ReactNode}>=({children})=>{
  const {isLoading}=useLoadUserQuery({});
  return(
    <>
    {
      isLoading? <Loader/> : <>{children}</>
    }
    </>
  )
}